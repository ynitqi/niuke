class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        vector<int> dp(amount+1,-2);//此处被多次调用，如果不定义helper
        
        return helper(coins,amount,dp);
    }
    
    
    int helper(vector<int>& coins, int amount,vector<int> &dp){
        if(amount<0) return -1;
        if(amount==0) return 0;
        if(dp[amount]!=-2){
            return dp[amount];
        }
        int size=coins.size();
        int res=-1;
        int nes;
        for(int i=0;i<size;++i){
            if((nes=helper(coins,amount-coins[i],dp))!=-1){
                if(res==-1){
                    res=nes+1;a
                }
                else{
                    res=min(res,nes+1);
                }
            }
        }
        dp[amount]=res;
        return res;
    }
};

